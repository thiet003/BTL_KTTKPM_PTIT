apiVersion: apps/v1
kind: Deployment
metadata:
  name: race-result-service
  namespace: f1-app
  labels:
    app: race-result-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: race-result-service
  template:
    metadata:
      labels:
        app: race-result-service
    spec:
      containers:
      - name: race-result-service
        image: race-result-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8083
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: f1-app-config
              key: SPRING_PROFILES_ACTIVE
        - name: EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE
          valueFrom:
            configMapKeyRef:
              name: f1-app-config
              key: EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mysql://race-result-db:3306/race_result_db"
        - name: SPRING_DATASOURCE_USERNAME
          value: "root"
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: f1-app-secrets
              key: mysql-root-password
        - name: SPRING_RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: f1-app-config
              key: RABBITMQ_HOST
        - name: SPRING_RABBITMQ_PORT
          valueFrom:
            configMapKeyRef:
              name: f1-app-config
              key: RABBITMQ_PORT
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8083
          initialDelaySeconds: 60
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8083
          initialDelaySeconds: 90
          periodSeconds: 30
      initContainers:
      - name: wait-for-eureka
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z eureka-server 8761; do echo waiting for eureka; sleep 2; done;']
      - name: wait-for-db
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z race-result-db 3306; do echo waiting for database; sleep 2; done;']
      - name: wait-for-rabbitmq
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: race-result-service
  namespace: f1-app
  labels:
    app: race-result-service
spec:
  selector:
    app: race-result-service
  ports:
  - port: 8083
    targetPort: 8083
    protocol: TCP
  type: ClusterIP 