{"ast":null,"code":"import api from './api';\n// Lấy xếp hạng tay đua theo id mùa giải\nexport const getDriverStandingsBySeasonId = async seasonId => {\n  try {\n    const response = await api.get(`/driver-standings/season/${seasonId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching driver standings for season ${seasonId}:`, error);\n    throw error;\n  }\n};\nexport const getDriverStandingBySeasonIdAndDriverId = async (seasonId, driverId) => {\n  try {\n    const response = await api.get(`/driver-standings/season/${seasonId}/driver/${driverId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching driver standing for season ${seasonId} and driver ${driverId}:`, error);\n    throw error;\n  }\n};\nexport const getDriverRaceResults = async (driverId, seasonId) => {\n  try {\n    const response = await api.get(`/race-results/driver/${driverId}?seasonId=${seasonId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching race results for driver ${driverId} in season ${seasonId}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["api","getDriverStandingsBySeasonId","seasonId","response","get","data","error","console","getDriverStandingBySeasonIdAndDriverId","driverId","getDriverRaceResults"],"sources":["C:/Users/ADMIN/Desktop/BTL_KTPM/f1-management-system/f1-management-frontend/src/services/standingsService.js"],"sourcesContent":["import api from './api';\n// Lấy xếp hạng tay đua theo id mùa giải\nexport const getDriverStandingsBySeasonId = async (seasonId) => {\n  try {\n    const response = await api.get(`/driver-standings/season/${seasonId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching driver standings for season ${seasonId}:`, error);\n    throw error;\n  }\n};\n\nexport const getDriverStandingBySeasonIdAndDriverId = async (seasonId, driverId) => {\n  try {\n    const response = await api.get(`/driver-standings/season/${seasonId}/driver/${driverId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching driver standing for season ${seasonId} and driver ${driverId}:`, error);\n    throw error;\n  }\n};\n\nexport const getDriverRaceResults = async (driverId, seasonId) => {\n  try {\n    const response = await api.get(`/race-results/driver/${driverId}?seasonId=${seasonId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching race results for driver ${driverId} in season ${seasonId}:`, error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AACvB;AACA,OAAO,MAAMC,4BAA4B,GAAG,MAAOC,QAAQ,IAAK;EAC9D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,4BAA4BF,QAAQ,EAAE,CAAC;IACtE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8CAA8CJ,QAAQ,GAAG,EAAEI,KAAK,CAAC;IAC/E,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,sCAAsC,GAAG,MAAAA,CAAON,QAAQ,EAAEO,QAAQ,KAAK;EAClF,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,4BAA4BF,QAAQ,WAAWO,QAAQ,EAAE,CAAC;IACzF,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6CAA6CJ,QAAQ,eAAeO,QAAQ,GAAG,EAAEH,KAAK,CAAC;IACrG,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,oBAAoB,GAAG,MAAAA,CAAOD,QAAQ,EAAEP,QAAQ,KAAK;EAChE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,wBAAwBK,QAAQ,aAAaP,QAAQ,EAAE,CAAC;IACvF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0CAA0CG,QAAQ,cAAcP,QAAQ,GAAG,EAAEI,KAAK,CAAC;IACjG,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}