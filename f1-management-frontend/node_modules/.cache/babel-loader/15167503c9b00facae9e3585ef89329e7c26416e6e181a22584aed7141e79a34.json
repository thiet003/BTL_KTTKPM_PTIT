{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\KTPM\\\\BTL_KTTKPM_PTIT\\\\f1-management-frontend\\\\src\\\\pages\\\\StandingsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, Spinner, Alert } from 'react-bootstrap';\nimport { getAllSeasons } from '../services/seasonService';\nimport { getDriverStandingsBySeasonId } from '../services/standingsService';\nimport DriverStandingsTable from '../components/Standings/DriverStandingsTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StandingsPage = () => {\n  _s();\n  const [seasons, setSeasons] = useState([]);\n  const [selectedSeason, setSelectedSeason] = useState('');\n  const [standings, setStandings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchSeasons = async () => {\n      try {\n        const data = await getAllSeasons();\n        setSeasons(data);\n        if (data.length > 0) {\n          setSelectedSeason(data[0].id); // Select first season by default\n        }\n      } catch (err) {\n        setError('Không thể tải danh sách mùa giải. Vui lòng thử lại sau.');\n        console.error('Error fetching seasons:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSeasons();\n  }, []);\n  useEffect(() => {\n    if (selectedSeason) {\n      fetchStandings(selectedSeason);\n    }\n  }, [selectedSeason]);\n  const fetchStandings = async seasonId => {\n    setLoading(true);\n    try {\n      const data = await getDriverStandingsBySeasonId(seasonId);\n      setStandings(data);\n    } catch (err) {\n      setError('Không thể tải bảng xếp hạng. Vui lòng thử lại sau.');\n      console.error('Error fetching standings:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSeasonChange = e => {\n    setSelectedSeason(e.target.value);\n  };\n  if (loading && seasons.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex justify-content-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"\\u0110ang t\\u1EA3i...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"B\\u1EA3ng x\\u1EBFp h\\u1EA1ng c\\xE1c tay \\u0111ua\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Ch\\u1ECDn m\\xF9a gi\\u1EA3i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: selectedSeason,\n            onChange: handleSeasonChange,\n            disabled: loading || seasons.length === 0,\n            children: seasons.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Kh\\xF4ng c\\xF3 m\\xF9a gi\\u1EA3i n\\xE0o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this) : seasons.map(season => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: season.id,\n              children: [season.name, \" (\", season.year, \")\"]\n            }, season.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), loading && standings.length === 0 ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"\\u0110ang t\\u1EA3i b\\u1EA3ng x\\u1EBFp h\\u1EA1ng...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DriverStandingsTable, {\n      standings: standings,\n      seasonId: selectedSeason\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(StandingsPage, \"NvutU2AHsdeWqODxKFXkBrMoYto=\");\n_c = StandingsPage;\nexport default StandingsPage;\nvar _c;\n$RefreshReg$(_c, \"StandingsPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Form","Spinner","Alert","getAllSeasons","getDriverStandingsBySeasonId","DriverStandingsTable","jsxDEV","_jsxDEV","StandingsPage","_s","seasons","setSeasons","selectedSeason","setSelectedSeason","standings","setStandings","loading","setLoading","error","setError","fetchSeasons","data","length","id","err","console","fetchStandings","seasonId","handleSeasonChange","e","target","value","className","children","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","variant","Group","Label","Select","onChange","disabled","map","season","name","year","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/KTPM/BTL_KTTKPM_PTIT/f1-management-frontend/src/pages/StandingsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Form, Spinner, Alert } from 'react-bootstrap';\r\nimport { getAllSeasons } from '../services/seasonService';\r\nimport { getDriverStandingsBySeasonId } from '../services/standingsService';\r\nimport DriverStandingsTable from '../components/Standings/DriverStandingsTable';\r\n\r\nconst StandingsPage = () => {\r\n  const [seasons, setSeasons] = useState([]);\r\n  const [selectedSeason, setSelectedSeason] = useState('');\r\n  const [standings, setStandings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchSeasons = async () => {\r\n      try {\r\n        const data = await getAllSeasons();\r\n        setSeasons(data);\r\n        if (data.length > 0) {\r\n          setSelectedSeason(data[0].id); // Select first season by default\r\n        }\r\n      } catch (err) {\r\n        setError('Không thể tải danh sách mùa giải. Vui lòng thử lại sau.');\r\n        console.error('Error fetching seasons:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSeasons();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedSeason) {\r\n      fetchStandings(selectedSeason);\r\n    }\r\n  }, [selectedSeason]);\r\n\r\n  const fetchStandings = async (seasonId) => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getDriverStandingsBySeasonId(seasonId);\r\n      setStandings(data);\r\n    } catch (err) {\r\n      setError('Không thể tải bảng xếp hạng. Vui lòng thử lại sau.');\r\n      console.error('Error fetching standings:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSeasonChange = (e) => {\r\n    setSelectedSeason(e.target.value);\r\n  };\r\n\r\n  if (loading && seasons.length === 0) {\r\n    return (\r\n      <Container className=\"d-flex justify-content-center mt-5\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Đang tải...</span>\r\n        </Spinner>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h2 className=\"page-title\">Bảng xếp hạng các tay đua</h2>\r\n      \r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      \r\n      <div className=\"mb-4\">\r\n        <Form>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Chọn mùa giải</Form.Label>\r\n            <Form.Select \r\n              value={selectedSeason} \r\n              onChange={handleSeasonChange}\r\n              disabled={loading || seasons.length === 0}\r\n            >\r\n              {seasons.length === 0 ? (\r\n                <option>Không có mùa giải nào</option>\r\n              ) : (\r\n                seasons.map(season => (\r\n                  <option key={season.id} value={season.id}>\r\n                    {season.name} ({season.year})\r\n                  </option>\r\n                ))\r\n              )}\r\n            </Form.Select>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n      \r\n      {loading && standings.length === 0 ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Đang tải bảng xếp hạng...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <DriverStandingsTable \r\n          standings={standings} \r\n          seasonId={selectedSeason} \r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StandingsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}